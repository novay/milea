/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_BullsPower_Params_{{ Timeframe }} : BullsPowerParams {
  Indi_BullsPower_Params_{{ Timeframe }}() : BullsPowerParams(indi_bulls_defaults, PERIOD_{{ Timeframe }}) {
    applied_price = (ENUM_APPLIED_PRICE){{ BullsPower_Indi_BullsPower_Applied_Price | default(0) }};
    period = {{ BullsPower_Indi_BullsPower_Period | default(0) }};
    shift = {{ BullsPower_Indi_BullsPower_Shift | default(0) }};
  }
} indi_bulls_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_BullsPower_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_BullsPower_Params_{{ Timeframe }}() : StgParams(stg_bulls_defaults) {
    lot_size = {{ BullsPower_LotSize | default(0) }};
    signal_open_method = {{ BullsPower_SignalOpenMethod | default(0) }};
    signal_open_filter_method = {{ BullsPower_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ BullsPower_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ BullsPower_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ BullsPower_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ BullsPower_SignalCloseLevel | default(0) }};
    price_stop_method = {{ BullsPower_PriceStopMethod | default(0) }};
    price_stop_level = (float){{ BullsPower_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ BullsPower_TickFilterMethod  | default(1) }};
    max_spread = {{ BullsPower_MaxSpread | default(0) }};
  }
} stg_bulls_{{ Timeframe | lower }};
