/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_Stochastic_Params_{{ Timeframe }} : StochParams {
  Indi_Stochastic_Params_{{ Timeframe }}() : StochParams(indi_stoch_defaults, PERIOD_{{ Timeframe }}) {
    dperiod = {{ Stochastic_Indi_Stochastic_DPeriod | default(0) }};
    kperiod = {{ Stochastic_Indi_Stochastic_KPeriod | default(0) }};
    ma_method = (ENUM_MA_METHOD){{ Stochastic_Indi_Stochastic_MA_Method | default(0) }};
    price_field = (ENUM_STO_PRICE){{ Stochastic_Indi_Stochastic_Price_Field | default(0) }};
    shift = {{ Stochastic_Indi_Stochastic_Shift | default(0) }};
    slowing = {{ Stochastic_Indi_Stochastic_Slowing | default(0) }};
  }
} indi_stoch_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_Stochastic_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_Stochastic_Params_{{ Timeframe }}() : StgParams(stg_stoch_defaults) {
    lot_size = {{ Stochastic_LotSize | default(0) }};
    signal_open_method = {{ Stochastic_SignalOpenMethod | default(0) }};
    signal_open_filter_method = {{ Stochastic_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ Stochastic_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ Stochastic_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ Stochastic_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ Stochastic_SignalCloseLevel | default(0) }};
    price_stop_method = {{ Stochastic_PriceStopMethod | default(0) }};
    price_stop_level = (float){{ Stochastic_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ Stochastic_TickFilterMethod  | default(1) }};
    max_spread = {{ Stochastic_MaxSpread | default(0) }};
  }
} stg_stoch_{{ Timeframe | lower }};
