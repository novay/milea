/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_BearsPower_Params_{{ Timeframe }} : BearsPowerParams {
  Indi_BearsPower_Params_{{ Timeframe }}() : BearsPowerParams(indi_bears_defaults, PERIOD_{{ Timeframe }}) {
    applied_price = (ENUM_APPLIED_PRICE){{ BearsPower_Indi_BearsPower_Applied_Price | default(0) }};
    period = {{ BearsPower_Indi_BearsPower_Period | default(0) }};
    shift = {{ BearsPower_Indi_BearsPower_Shift | default(0) }};
  }
} indi_bears_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_BearsPower_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_BearsPower_Params_{{ Timeframe }}() : StgParams(stg_bears_defaults) {
    lot_size = {{ BearsPower_LotSize | default(0) }};
    signal_open_method = {{ BearsPower_SignalOpenMethod | default(0) }};
    signal_open_filter_method = {{ BearsPower_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ BearsPower_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ BearsPower_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ BearsPower_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ BearsPower_SignalCloseLevel | default(0) }};
    price_stop_method = {{ BearsPower_PriceStopMethod | default(0) }};
    price_stop_level = (float){{ BearsPower_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ BearsPower_TickFilterMethod  | default(1) }};
    max_spread = {{ BearsPower_MaxSpread | default(0) }};
  }
} stg_bears_{{ Timeframe | lower }};
