/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_WPR_Params_{{ Timeframe }} : WPRParams {
  Indi_WPR_Params_{{ Timeframe }}() : WPRParams(indi_wpr_defaults, PERIOD_{{ Timeframe }}) {
    period = {{ WPR_Indi_WPR_Period | default(0) }};
    shift = {{ WPR_Indi_WPR_Shift | default(0) }};
  }
} indi_wpr_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_WPR_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_WPR_Params_{{ Timeframe }}() : StgParams(stg_wpr_defaults) {
    lot_size = {{ WPR_LotSize | default(0) }};
    signal_open_method = {{ WPR_SignalOpenMethod | default(0) }};
    signal_open_filter_method = {{ WPR_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ WPR_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ WPR_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ WPR_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ WPR_SignalCloseLevel | default(0) }};
    price_stop_method = {{ WPR_PriceStopMethod | default(0) }};
    price_stop_level = (float){{ WPR_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ WPR_TickFilterMethod  | default(1) }};
    max_spread = {{ WPR_MaxSpread | default(0) }};
  }
} stg_wpr_{{ Timeframe | lower }};
