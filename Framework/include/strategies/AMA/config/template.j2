/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_AMA_Params_{{ Timeframe }} : AMAIndiParams {
  Indi_AMA_Params_{{ Timeframe }}() : AMAIndiParams(indi_ama_defaults, PERIOD_{{ Timeframe }}) {
    shift = {{ AMA_Indi_AMA_Shift | default(0) }};
  }
} indi_ama_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_AMA_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_AMA_Params_{{ Timeframe }}() : StgParams(stg_ama_defaults) {
    lot_size = {{ AMA_LotSize | default(0) }};
    signal_open_method = {{ AMA_SignalOpenMethod | default(0) }};
    signal_open_filter_method = {{ AMA_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ AMA_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ AMA_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ AMA_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ AMA_SignalCloseLevel | default(0) }};
    price_stop_method = {{ AMA_PriceStopMethod | default(0) }};
    price_stop_level = (float){{ AMA_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ AMA_TickFilterMethod  | default(1) }};
    max_spread = {{ AMA_MaxSpread | default(0) }};
  }
} stg_ama_{{ Timeframe | lower }};
