/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_ATR_Params_{{ Timeframe }} : ATRParams {
  Indi_ATR_Params_{{ Timeframe }}() : ATRParams(indi_atr_defaults, PERIOD_{{ Timeframe }}) {
    period = {{ ATR_Indi_ATR_Period | default(0) }};
    shift = {{ ATR_Indi_ATR_Shift | default(0) }};
  }
} indi_atr_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_ATR_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_ATR_Params_{{ Timeframe }}() : StgParams(stg_atr_defaults) {
    lot_size = {{ ATR_LotSize | default(0) }};
    signal_open_method = {{ ATR_SignalOpenMethod | default(0) }};
    signal_open_filter_method = {{ ATR_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ ATR_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ ATR_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ ATR_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ ATR_SignalCloseLevel | default(0) }};
    price_stop_method = {{ ATR_PriceStopMethod | default(0) }};
    price_stop_level = (float){{ ATR_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ ATR_TickFilterMethod  | default(1) }};
    max_spread = {{ ATR_MaxSpread | default(0) }};
  }
} stg_atr_{{ Timeframe | lower }};
